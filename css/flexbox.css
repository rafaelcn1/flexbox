/* Flexbox que é uma propriedade razoavelmente atual. Portanto, é preciso ter cuidado ao utilizar essa propriedade, pois nem todos os navegadores a aceitam. Para descobrir em quais sistemas a propriedade funciona podemos consultar o site https://caniuse.com/ Basta digitar o nome da propriedade no campo de busca */

.cabecalhoPrincipal .container {
    display: flex;
    /* Colocar os elementos um ao lado do outro */
    align-items: center;
    /* Alinhar os elementos no centro */
    justify-content: space-between;
    /* Colocar o espaco dos elementos entre eles */
}

.cabecalhoPrincipal-nav {
    display: flex;
    /* Colocar os elementos um ao lado do outro */
}

.cabecalhoPrincipal-nav a {
    margin: 0 0 0 10px;
    /* Colocar um pequeno espaçamento a esquerda dos elementos, pois o display flex na tag NAV não tem espaço entre eles para podermos usar o justify-content: space-between; */
}

.rodapePrincipal-patrocinadores .container {
    display: flex;
    /* Colocar os elementos um ao lado do outro */
    justify-content: space-between;
    /* Colocar o espaco dos elementos entre eles */
}

.rodapePrincipal-patrocinadores-list {
    display: flex;
    /* Colocar os elementos um ao lado do outro */
    justify-content: space-around;
    /* Colocar o espaco dos elementos ao redor entre eles */
    width: 75%;
    /* determinar o tamanho total em apenas 1/3 do tamanho do elemento */
    align-items: center;
    /* Alinhar os elementos no centro */
    margin-right: 5%;
}

.rodapePrincipal-contatoForm {
    display: flex;
    width: 25%;
}

.rodapePrincipal-contatoForm-fieldset {
    display: flex;
    /*o flex também deixa os filhos com a mesma aparência dos pais!*/
}

.rodapePrincipal-navMap-list {
    display: flex;
    /* Colocar os elementos um ao lado do outro, deixando os filhos com a mesma aparência dos pais  */
    flex-direction: column;
    /* Colocar os elementos em linha, mas em colunas, pois flex-direction: row; padrão do display flex trabalha com row que é igual em linha  */
    flex-wrap: wrap;
    /* O flex-wrap: wrap, server para quando acabar o tamanho do elemento, extrapolando as alturas, ele quebrar o mesmo para a proxima coluna */
    /* flex-flow: wrap column; Serve como atalho das duas propriedades acima */
    height: 250px;
    /* Para o flex-wrap: wrap ter efeito, precisamos definir um tamanho, nesse caso 250px */
}

.conteudoPrincipal-cursos {
    display: flex;
    flex-wrap: wrap;
}

.conteudoPrincipal-cursos-link {
    width: 23%;
    margin: 1%;
}

.conteudoPrincipal-cursos-link:nth-child(4n) {
    /* nth-child(4n) serve para pegar o "quarto filho" adicionamos entre os parênteses o 4n, atuando apenas nele  */
    margin-right: 0;
    /* Quer dizer que vamos remover a margem a direita do 4 elemento do pai citado na classe acima*/
}

.conteudoPrincipal-cursos-link:nth-child(4n+1) {
    /* nth-child(4n+1) serve para pegar o proximo elemendo do "quarto filho" adicionamos entre os parênteses o 4n+1, atuando apenas nele  */
    margin-left: 0;
    /* Quer dizer que vamos remover a margem a esquerda do 4 elemento do pai citado na classe acima*/
}

.videoSobre .container {
    display: flex;
}

.videoSobre-sobre {
    display: flex;
    flex-grow: 1;
    flex-direction: column;
    text-align: center;
}

.videoSobre-sobre-list {
    flex-grow: 1;
    /* os elementos irão crescer 1, esse valor pode ser N */
}

.videoSobre-video {
    flex-grow: 1;
    /* os elementos irão crescer 1, esse valor pode ser N */
}


/* Ajuste para Mobile */

@media(max-width: 768px) {
    /* Até 768px será usado as definições abaixo */
    .cabecalhoPrincipal-nav {
        display: flex;
        flex-direction: column;
    }
    .cabecalhoPrincipal .container {
        flex-direction: column;
        align-items: initial;
        /* Nesse caso o alinhamento será feito do incio do elemento e não centralizado como estava antes */
        text-align: center;
        /* Alinhando os textos centralizado */
    }
    .conteudoPrincipal-cursos {
        flex-direction: column;
    }
    .conteudoPrincipal-cursos-link {
        width: 100%;
    }
    .rodapePrincipal-navMap-list {
        height: auto;
        /* Vai ser calculado automatico */
    }
    .rodapePrincipal-patrocinadores .container {
        flex-direction: column;
    }
    .rodapePrincipal-patrocinadores-list {
        width: 100%;
    }
    .rodapePrincipal-contatoForm {
        width: 100%;
        justify-content: center;
        /* Ajustar o conteudo, nesse caso será centralizado */
    }
    .cabecalhoPrincipal-nav-link-app {
        order: -1;
        /* Determina a ordem do elemento, por padrão é 0, quando colocamos -1, é para vir antes de todos */
    }
}